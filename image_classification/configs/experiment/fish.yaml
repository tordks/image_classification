# @package _global_

# dataset from: https://www.kaggle.com/datasets/crowww/a-large-scale-fish-dataset

experiment_name: fish
experiment_description: dataset to test both image classification and segmentation
data_dir: &data_dir ${work_dir}/data/fish-dataset/NA_Fish_Dataset

num_classes: &num_classes 9
metric_to_optimize: &metric_to_optimize "val_f1"
optimization_mode: &optimization_mode "max"

module:
  network:
    _target_: image_classification.models.model_wrapper.ModelWrapper
    target: "feature"
    network:
      _target_: torchvision.models.resnet18
      num_classes: *num_classes
  loss:
    _target_: torch.nn.CrossEntropyLoss

  optimizer:
    _target_: torch.optim.SGD
    lr: 0.01
    momentum: 0.9
    weight_decay: 0.00005

  lr_scheduler:
    scheduler:
      _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
      mode: *optimization_mode
      factor: 0.5
      patience: 10
      min_lr: 1e-6
    interval: "epoch"
    monitor: "val_loss"

  training_metrics:
    train_f1:
      _target_: torchmetrics.F1
      num_classes: *num_classes

  validation_metrics:
    val_f1:
      _target_: torchmetrics.F1
      num_classes: *num_classes
    val_cm:
      _target_: image_classification.metrics.MetricsWrapper
      log: false
      metric:
        _target_: torchmetrics.ConfusionMatrix
        num_classes: *num_classes
        normalize: "true"

  transforms:
    - _target_: image_classification.transforms.Transform
      identifier: argmax
      stage: training_step
      every_n: 25
      targets: "prediction"
      transform:
        _target_: torch.argmax
        _partial_: true
        dim: 1

  visualization:
    - _target_: image_classification.visualization.Subplots
      identifier: "Train images"
      stage: training_step
      every_n: 25
      batch_idx: 0
      title: "Feature l:{label} p:{prediction_argmax}"
      nrows: 1
      ncols: 1
      subplots_kwargs:
        figsize: [8, 8]

      plotters:
        - _target_: image_classification.visualization.Plotter
          plotter:
            _target_: matplotlib.pyplot.imshow
            _partial_: true
          targets: { feature: 0 }
          tensor_idx: 0

    - _target_: image_classification.visualization.Subplots
      identifier: "confusion matrix"
      stage: on_validation_epoch_end
      every_n: 1
      nrows: 1
      ncols: 1
      subplots_kwargs:
        figsize: [8, 8]
      plotters:
        - _target_: image_classification.visualization.Plotter
          plotter:
            _target_: image_classification.visualization.ConfusionMatrixPlotter
          targets: { val_cm: confusion_matrix }

  hp_metric: *metric_to_optimize

data:
  _target_: image_classification.data.fish.FishDataModule
  data_dir: *data_dir
  batch_size: 10
  num_workers: 0
